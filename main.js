(()=>{"use strict";(new class{constructor(){this.url="https://workers-backend-6qsk.onrender.com",this.newsContainer=document.querySelector(".news_container")}init(){this.serviceWorkerChecking(),this.refreshButton(),setTimeout((()=>this.requestToServer()),5e3)}async requestToServer(){try{const e=await fetch(this.url),r=await e.json();this.newsContainer.innerHTML="",this.newsViewer(r),console.log(r)}catch(e){this.errorMarkingViewer(),console.log(e)}}serviceWorkerChecking(){"serviceWorker"in navigator&&navigator.serviceWorker.register("./service-worker.js",{scope:"./"}).then((e=>{console.log("Зарегистрирован: "+e.scope)})).catch((e=>{console.log(e)}))}newsMarking(e,r,s,n){return`<div class="news_item">\n                    <span class="news_item_date">${e}</span>\n                    <div class="news_item_description">\n                        <div class="news_item_image">\n                            <img class="image" src="${r}" alt="cinema">\n                        </div>\n                        <div class="news_item_text">\n                            <span class="news_item_text-name">${s}</span>\n                            <span class="news_item_text-desc">${n}</span>\n                </div>`}newsViewer(e){e.forEach((e=>{this.newsContainer.insertAdjacentHTML("beforeend",this.newsMarking(e.date,e.img,e.name,e.description))}))}errorMarkingViewer(){this.newsContainer.insertAdjacentHTML("beforeend",'<div class="error">\n                <div class="error_msg">\n                    Не удалось загрузить данные. Проверьте подключение и обновите страницу.\n                </div>\n            </div>')}errorMarkingDelete(){document.querySelector(".error")&&document.querySelector(".error").remove()}refreshButton(){document.querySelector(".news_window_refresh").addEventListener("click",(()=>{this.errorMarkingDelete(),this.requestToServer()}))}}).init()})();